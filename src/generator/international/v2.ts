import { B2C_B2B_Payload, C2C_C2B_Payload } from '../../utils/type/v2';

export function createC2C_C2BRequest(payload: C2C_C2B_Payload) {
  return {
    id_number: payload.idNumber,
    id_expiration_date: payload.idExpirationDate,
    amount: payload.amount,
    source_country: payload.sourceCountry,
    destination_country: payload.destinationCountry,
    transaction_type: payload.transactionType,
    beneficiary_full_name: payload.beneficiaryFullName,
    beneficiary_account_number: payload.beneficiaryAccountNumber,
    beneficiary_bank_id: payload.beneficiaryBankId,
    beneficiary_bank_name: payload.beneficiaryBankName,
    beneficiary_email: payload.beneficiaryEmail,
    beneficiary_msisdn: payload.beneficiaryMsisdn,
    beneficiary_nationality: payload.beneficiaryNationality,
    beneficiary_province: payload.beneficiaryProvince,
    beneficiary_city: payload.beneficiaryCity,
    beneficiary_address: payload.beneficiaryAddress,
    beneficiary_postal_code: payload.beneficiaryPostalCode,
    beneficiary_relationship: payload.beneficiaryRelationship,
    beneficiary_source_of_funds: payload.beneficiarySourceOfFunds,
    beneficiary_remitance_purposes: payload.beneficiaryRemittancePurposes,
    beneficiary_iban: payload.beneficiaryIban,
    beneficiary_swift_bic_code: payload.beneficiarySwiftBicCode,
    beneficiary_sort_code: payload.beneficiarySortCode,
    beneficiary_ifs_code: payload.beneficiaryIfsCode,
    beneficiary_bsb_number: payload.beneficiaryBsbNumber,
    beneficiary_branch_number: payload.beneficiaryBranchNumber,
    beneficiary_document_reference_number:
      payload.beneficiaryDocumentReferenceNumber,
    beneficiary_registration_number: payload.beneficiaryRegistrationNumber,
    beneficiary_region: payload.beneficiaryRegion,
    sender_name: payload.senderName,
    sender_country: payload.sourceCountry,
    sender_place_of_birth: payload.senderPlaceOfBirth,
    sender_date_of_birth: payload.senderDateOfBirth,
    sender_address: payload.senderAddress,
    sender_identity_type: payload.senderIdentityType,
    sender_job: payload.senderJob,
    sender_email: payload.senderEmail,
    sender_city: payload.senderCity,
    sender_phone_number: payload.senderPhoneNumber,
  };
}

export function createB2C_B2BRequest(payload: B2C_B2B_Payload) {
  return {
    destination_country: payload.destinationCountry,
    source_country: payload.sourceCountry,
    transaction_type: payload.transactionType,
    amount: payload.amount,
    attachment_data: payload.attachmentData,
    attachment_type: payload.attachmentType,
    beneficiary_account_number: payload.beneficiaryAccountNumber,
    beneficiary_ach_code: payload.beneficiaryAchCode,
    beneficiary_address: payload.beneficiaryAddress,
    beneficiary_bank_id: payload.beneficiaryBankId,
    beneficiary_bank_name: payload.beneficiaryBankName,
    beneficiary_branch_number: payload.beneficiaryBranchNumber,
    beneficiary_bsb_number: payload.beneficiaryBsbNumber,
    beneficiary_city: payload.beneficiaryCity,
    beneficiary_document_reference_number:
      payload.beneficiaryDocumentReferenceNumber,
    beneficiary_email: payload.beneficiaryEmail,
    beneficiary_full_name: payload.beneficiaryFullName,
    beneficiary_iban: payload.beneficiaryIban,
    beneficiary_id_expiration_date: payload.beneficiaryIdExpirationDate,
    beneficiary_ifs_code: payload.beneficiaryIfsCode,
    beneficiary_id_number: payload.beneficiaryIdNumber,
    beneficiary_msisdn: payload.beneficiaryMsisdn,
    beneficiary_nationality: payload.beneficiaryNationality,
    beneficiary_postal_code: payload.beneficiaryPostalCode,
    beneficiary_relationship: payload.beneficiaryRelationship,
    beneficiary_sort_code: payload.beneficiarySortCode,
    beneficiary_source_of_funds: payload.beneficiarySourceOfFunds,
  };
}
